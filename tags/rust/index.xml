<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on /dev/null</title>
    <link>/tags/rust/</link>
    <description>Recent content in Rust on /dev/null</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 27 Apr 2019 23:11:54 +0200</lastBuildDate>
    
	<atom:link href="/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rust Cross Compile for Linux</title>
      <link>/posts/rust-cross-compile-for-linux/</link>
      <pubDate>Sat, 27 Apr 2019 23:11:54 +0200</pubDate>
      
      <guid>/posts/rust-cross-compile-for-linux/</guid>
      <description>Unlike go, which relies on direct syscalls for integrations, rust instead relies on libc. Because rust links to libc, cross compiling is a little bit annoying - we need a c linker and a libc to link against.
The simplest way I&amp;rsquo;ve found to cross compile rust for linux is by the procedure detailed below.
# install the rust musl libc target $ rustup target add x86_64-unknown-linux-musl # the command below will compile the &amp;quot;main&amp;quot; binary (as named in `Cargo.</description>
    </item>
    
  </channel>
</rss>