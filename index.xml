<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>/dev/null</title>
    <link>/</link>
    <description>Recent content on /dev/null</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Apr 2019 20:59:46 +0200</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nextthing Chip Resurrection</title>
      <link>/posts/nextthing-chip-resurrection/</link>
      <pubDate>Mon, 29 Apr 2019 20:59:46 +0200</pubDate>
      
      <guid>/posts/nextthing-chip-resurrection/</guid>
      <description>I had to reset my NextThing Co C.H.I.P. because I had lost access. This turned out to be a lot more fun than expected.
NextThing as a company is no more, their docs and github repo&amp;rsquo;s are gone. So how can we flash out Chip?
First things first - there&amp;rsquo;s a docs mirror at http://chip.jfpossibilities.com/docs/chip.html#flash-chip-firmware
Do not bother trying to get the official SDK up an running, because after hours of trying and finally getting it all to work, it still doesn&amp;rsquo;t work.</description>
    </item>
    
    <item>
      <title>Rust Cross Compile for Linux</title>
      <link>/posts/rust-cross-compile-for-linux/</link>
      <pubDate>Sat, 27 Apr 2019 23:11:54 +0200</pubDate>
      
      <guid>/posts/rust-cross-compile-for-linux/</guid>
      <description>Unlike go, which relies on direct syscalls for integrations, rust instead relies on libc. Because rust links to libc, cross compiling is a little bit annoying - we need a c linker and a libc to link against.
The simplest way I&amp;rsquo;ve found to cross compile rust for linux is by the procedure detailed below.
# install the rust musl libc target $ rustup target add x86_64-unknown-linux-musl # the command below will compile the &amp;quot;main&amp;quot; binary (as named in `Cargo.</description>
    </item>
    
    <item>
      <title>Tmux scrolling and basic usage</title>
      <link>/posts/tmux-scrolling/</link>
      <pubDate>Fri, 15 Mar 2019 19:34:55 +0100</pubDate>
      
      <guid>/posts/tmux-scrolling/</guid>
      <description>Scrolling in tmux is best done with mouse-mode enabled, or in copy-mode.
Before entering copy mode you should run the command :set-window-option mode-keys vi to let you scroll in copy-mode with C-u and C-d as well as J and K (Shift-j and Shift-k). To be able to enter commands in tmux you have to first press C-b.
To enter copy-mode you should do C-b [, but this doesn&amp;rsquo;t seem to work for me (keyboard layout problems?</description>
    </item>
    
    <item>
      <title>Nix package manager intro</title>
      <link>/posts/nix-pkg-mgr-intro/</link>
      <pubDate>Thu, 14 Mar 2019 18:37:53 +0100</pubDate>
      
      <guid>/posts/nix-pkg-mgr-intro/</guid>
      <description>Nix is a functional package manager and it has some learning curve. Nix should allow you to install packages (or environments) in parallel which do not interfere with eachother. Installing a package should never be able to break anything on your machine. I hope.
So I feel like I should just jump in an play with it.
I&amp;rsquo;ve already installed the Nix pkg manager for macOS from https://nixos.org/nix/ Now what?</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>/posts/hello-world/</link>
      <pubDate>Wed, 06 Mar 2019 19:18:44 +0100</pubDate>
      
      <guid>/posts/hello-world/</guid>
      <description>This is the first post written with Hugo. If you are me and I have forgotten how to do update this page, well then, you&amp;rsquo;re in luck.
# clone blog repo git clone https://github.com/flipb/blog.git cd blog ## make sure the submodules get initialized, ## not sure if this requires non-defaults in git? This sounds like a good second post.. # Update post vim content/posts/hello-world.md # check it out (should probably start this in a different terminal) # Note -D means it&#39;ll shoe Drafts # http://localhost:1313/ hugo server -D # ^c # create a new post hugo new content/posts/git-submodules-default-overrides.</description>
    </item>
    
  </channel>
</rss>